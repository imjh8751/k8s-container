apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  service.webhook.server-post-prod: |
    url: https://mattermost.itapi.org
    headers: #optional headers
    - name: Content-Type
      value: application/json
    insecureSkipVerify: true #optional bool
    
  # 실패 상태 알림 템플릿
  template.server-post-prod-on-sync-failed: |
    webhook:
      server-post-prod:
        method: POST
        path: /hooks/7qpcj3h6o3rsmppb75ew4hg9pw
        body: |
         {
            "text": "⚠️ 동기화 실패! {{.app.spec.source.targetRevision}}|{{.app.metadata.name}}\n App Health Status : {{.app.status.health.status}}\n App Sync Status : {{.app.status.sync.status}}\n App OperationState Phase : {{.app.status.operationState.phase}}",
            "attachments": [
                {
                    "fallback": "Application Sync Failed",
                    "color": "#FF0000",
                    "pretext": "애플리케이션 동기화 실패 알림",
                    "text": "애플리케이션 동기화 중 문제가 발생했습니다.",
                    "author_name": "Mattermost",
                    "author_icon": "https://mattermost.com/wp-content/uploads/2022/02/icon_WS.png",
                    "author_link": "https://mattermost.org/",
                    "title": "동기화 실패 알림",
                    "title_link": "https://developers.mattermost.com/integrate/reference/message-attachments/",
                    "fields": [
                        {
                            "short":false,
                            "title":"상태 정보",
                            "value":"Health: {{.app.status.health.status}}, Sync: {{.app.status.sync.status}}, Phase: {{.app.status.operationState.phase}}"
                        }
                    ]
                }
            ]
         }
  
  # 성공 상태 알림 템플릿 추가
  template.server-post-prod-on-sync-success: |
    webhook:
      server-post-prod:
        method: POST
        path: /hooks/7qpcj3h6o3rsmppb75ew4hg9pw
        body: |
         {
            "text": "✅ 동기화 성공! {{.app.spec.source.targetRevision}}|{{.app.metadata.name}}\n App Health Status : {{.app.status.health.status}}\n App Sync Status : {{.app.status.sync.status}}\n App OperationState Phase : {{.app.status.operationState.phase}}",
            "attachments": [
                {
                    "fallback": "Application Sync Success",
                    "color": "#36A64F",
                    "pretext": "애플리케이션 동기화 성공 알림",
                    "text": "애플리케이션이 성공적으로 동기화되었습니다.",
                    "author_name": "Mattermost",
                    "author_icon": "https://mattermost.com/wp-content/uploads/2022/02/icon_WS.png",
                    "author_link": "https://mattermost.org/",
                    "title": "동기화 성공 알림",
                    "title_link": "https://developers.mattermost.com/integrate/reference/message-attachments/",
                    "fields": [
                        {
                            "short":false,
                            "title":"상태 정보",
                            "value":"Health: {{.app.status.health.status}}, Sync: {{.app.status.sync.status}}, Phase: {{.app.status.operationState.phase}}"
                        }
                    ]
                }
            ]
         }

  # 실패 상태 트리거
  trigger.on-sync-failed: |-
    - description: Application syncing has failed
      send:
      - server-post-prod-on-sync-failed
      when: app.status.operationState.phase in ['Error', 'Failed'] or app.status.health.status in ['Degraded', 'Missing', 'Unknown'] or app.status.sync.status in ['OutOfSync', 'Unknown']
  
  # 성공 상태 트리거 추가
  trigger.on-sync-success: |-
    - description: Application syncing has succeeded
      send:
      - server-post-prod-on-sync-success
      when: app.status.operationState.phase == 'Succeeded' and app.status.health.status == 'Healthy' and app.status.sync.status == 'Synced'
